

https://developers.redhat.com/articles/2022/06/02/use-compiler-flags-stack-protection-gcc-and-clang#control_flow_integrity


https://www.memorysafety.org/docs/memory-safety/

https://www.f5.com/glossary/ssl-acceleration

gcc .\monsterSpawner.c  -g -o a.exe
gcc .\monsterSpawner.c -fcf-protection=full -g -o b.exe
gcc .\monsterSpawner.c -fstack-protector-all   -g -o c.exe
gcc .\monsterSpawner.c -fstack-protector-all -fcf-protection=full -pie  -g -o d.exe
gcc .\monsterSpawner.c -fno-stack-protector -fcf-protection=none -no-pie -g   -o e.exe
gcc .\monsterSpawner.c -fno-stack-protector -fcf-protection=none -no-pie -mtune=native -march=native -g -o f.exe


gcc .\vulnerableReturnAddress.c  -g -o vuln_a.exe
gcc .\vulnerableReturnAddress.c -fcf-protection=full -g -o vuln_b.exe
gcc .\vulnerableReturnAddress.c -fstack-protector-all   -g -o vuln_c.exe
gcc .\vulnerableReturnAddress.c -fstack-protector-all -fcf-protection=full -pie  -g -o vuln_d.exe
gcc .\vulnerableReturnAddress.c -fno-stack-protector -fcf-protection=none -no-pie -g   -o vuln_e.exe
gcc .\vulnerableReturnAddress.c -fno-stack-protector -fcf-protection=none -no-pie -mtune=native -march=native -g -o vuln_f.exe

 

 mux reliability rating:
 https://portal.nacad.ufrj.br/online/intel/vtune2017/help/GUID-159D858A-837D-405C-A09B-0C228A3636E4.html

https://portal.nacad.ufrj.br/online/intel/vtune2017/help/GUID-17A5055B-836A-479F-A2EC-94983E4F8203.html

https://best.openssf.org/Compiler-Hardening-Guides/Compiler-Options-Hardening-Guide-for-C-and-C++.html#fn:gcc_mshstk


ALSO TRY THIS:
https://www.intel.com/content/www/us/en/developer/articles/tool/oneapi-standalone-components.html#dpcpp-cpp
ic

With this Optimization

fcf-protection docs (jump table?)
https://gcc.gnu.org/onlinedocs/gcc/Instrumentation-Options.html#index-fcf-protection
CET instrumentation is controlled by -fcf-protection.
This is the true shadow stack. Check to see what the flags are when doing this:
gcc -v -Q during compile

mshstk (shadow stack) this may not even be activated 
https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html#index-mshstk
https://best.openssf.org/Compiler-Hardening-Guides/Compiler-Options-Hardening-Guide-for-C-and-C++.html#fn:gcc_mshstk
https://gcc.gnu.org/onlinedocs/gcc/x86-Built-in-Functions.html


 -fsanitize=shadow-call-stack


-fstack-protector-all
https://gcc.gnu.org/onlinedocs/gcc/Instrumentation-Options.html#index-fstack-protector






"C:\Program Files (x86)\Intel\oneAPI\vtune\2024.0\bin64\vtune" -collect uarch-exploration -knob sampling-interval=0.1 -knob collect-memory-bandwidth=true   --app-working-dir=C:\Users\Clifford\repos\securityPaper -- C:\Users\Clifford\repos\securityPaper\standard.exe 100000

"C:\Program Files (x86)\Intel\oneAPI\vtune\2024.0\bin64\vtune" -report summary -r r000ue  -format=csv  -csv-delimiter=","

